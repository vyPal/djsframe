{"meta":{"generator":"0.10.0","format":20,"date":1632324463866},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# DJSFrame\r\nDJSFrame is a very simple and open-source framework to easily build your discord bot. DJSFrame was made to feel familiar to anyone who has used Discord.js's commando. Commando was an awesome framework, but sadly, with the releas of Discord.js v13 the framework was no longer going to be supported. Since commando was a great library, and I liked many things about it (speed, ease of use, ...) I decided to make DJSFrame, a simple framework for the Discord.js library, that would feel familiar, be easy to use, but also had all the great new features that they added in Discord.js v13","path":"README.md"}}}},"classes":[{"name":"FrameClient","description":"Discord.js modified Client with a built-in command framework","extends":[[["Client"]]],"construct":{"name":"FrameClient","params":[{"name":"options","description":"The options for the new client","type":[[["FrameClientOptions"]]]}]},"props":[{"name":"registry","description":"Registry to use for storing groups, command sand their data","type":[[["FrameRegistry"]]],"meta":{"line":30,"file":"client.js","path":"src"}},{"name":"dispatcher","description":"Dispatcher to use for handling commands","type":[[["FrameDispatcher"]]],"meta":{"line":36,"file":"client.js","path":"src"}}],"methods":[{"name":"setRegistry","description":"Sets a new registry to use instead of default one","params":[{"name":"reg","description":"the new registry to set","type":[[["FrameRegistry"]]]}],"returns":{"types":[[["FrameClient"]]],"description":"client"},"meta":{"line":46,"file":"client.js","path":"src"}},{"name":"setDispatcher","description":"Sets a new dispatcher to use instead of default one","params":[{"name":"dsp","description":"the new dispatcher to set","type":[[["FrameDispatcher"]]]}],"returns":{"types":[[["FrameClient"]]],"description":"client"},"meta":{"line":64,"file":"client.js","path":"src"}}],"events":[{"name":"registryChange","description":"When the registry for the client is changed","params":[{"name":"client","type":[[["FrameClient"]]]},{"name":"registry","type":[[["FrameRegistry"]]]}],"meta":{"line":49,"file":"client.js","path":"src"}},{"name":"dispatcherChange","description":"When the dispatcher for the client is changed","params":[{"name":"client","type":[[["FrameClient"]]]},{"name":"dispatcher","type":[[["FrameDispatcher"]]]}],"meta":{"line":68,"file":"client.js","path":"src"}},{"name":"providerChange","description":"When the provider for the client is changed","params":[{"name":"client","type":[[["FrameClient"]]]},{"name":"provider","type":[[["SQLiteProvider"]]]}],"meta":{"line":81,"file":"client.js","path":"src"}},{"name":"groupRegister","description":"Emmited when a new group is registered","params":[{"name":"group","description":"The group that was registered","type":[[["FrameGroup"]]]},{"name":"registry","description":"The registry in which the group was registered","type":[[["FrameRegistry"]]]}],"meta":{"line":63,"file":"registry.js","path":"src"}},{"name":"commandRegister","description":"Emmited when a new command is registered","params":[{"name":"command","description":"The command that was registered","type":[[["FrameCommand"]]]},{"name":"registry","description":"The registry in which the command was registered","type":[[["FrameRegistry"]]]}],"meta":{"line":99,"file":"registry.js","path":"src"}},{"name":"setCommandDir","description":"Emmited when the command folder is changed","params":[{"name":"dir","description":"The folder to set as the command folder","type":[[["String"]]]},{"name":"registry","description":"The registry in which the command folder was changed","type":[[["FrameRegistry"]]]}],"meta":{"line":149,"file":"registry.js","path":"src"}}],"meta":{"line":10,"file":"client.js","path":"src"}},{"name":"FrameDispatcher","description":"Class for handling and running commands","construct":{"name":"FrameDispatcher","description":"Creates a dispatcher","params":[{"name":"client","description":"The client for which the dispatcher is being created","type":[[["FrameClient"]]]},{"name":"registry","description":"The registry in which groups and commands are registered","type":[[["FrameRegistry"]]]}]},"methods":[{"name":"handleMessage","description":"Handles a incoming message","params":[{"name":"message","description":"The message to handle","type":[[["Message"]]]}],"returns":{"types":[[["boolean"]]],"description":"- False if not executed and true if executed"},"meta":{"line":20,"file":"dispatcher.js","path":"src"}},{"name":"handleSlash","description":"Handles a slash command","params":[{"name":"interaction","description":"The interaction to handle","type":[[["Interaction"]]]}],"meta":{"line":36,"file":"dispatcher.js","path":"src"}},{"name":"handleCommand","description":"Handles a command","params":[{"name":"message","description":"The message (or interaction) containing the command","type":[[["Message"]],[["Interaction"]]]},{"name":"starttype","description":"The type of the command start (1-prefix, 2-mention, 3-interaction)","type":[[["Integer"]]]},{"name":"prefix","description":"The prefix used if starttype == 1","optional":true,"default":null,"type":[[["String"]]]}],"meta":{"line":48,"file":"dispatcher.js","path":"src"}}],"meta":{"line":4,"file":"dispatcher.js","path":"src"}},{"name":"FrameRegistry","description":"Class for registering and searching for commands and groups","construct":{"name":"FrameRegistry","description":"Creates a registry","params":[{"name":"client","description":"The client to initialise the registery with","optional":true,"type":[[["FrameClient"]]]}]},"props":[{"name":"client","description":"The client that this registry will be for","readonly":true,"type":[[["FrameClient"]]],"meta":{"line":16,"file":"registry.js","path":"src"}},{"name":"commands","description":"All registered commands, mapped by their name","type":[[["Collection","<"],["string",", "],["FrameCommand",">"]]],"meta":{"line":28,"file":"registry.js","path":"src"}},{"name":"groups","description":"All registered groups, mapped by their ID","type":[[["Collection","<"],["string",", "],["CommandGroup",">"]]],"meta":{"line":34,"file":"registry.js","path":"src"}},{"name":"commandsPath","description":"Full path to bot's command folder","nullable":true,"type":[[["string"]]],"meta":{"line":40,"file":"registry.js","path":"src"}},{"name":"unknownCommand","description":"Command that will be run when an unkwnown command is used","nullable":true,"type":[[["FrameCommand"]]],"meta":{"line":46,"file":"registry.js","path":"src"}}],"methods":[{"name":"registerGroup","description":"Adds a new group to the registry","see":["{@link FrameRegistry#registerGroup}"],"params":[{"name":"id","description":"The ID of the group (must be lowercase)","type":[[["String"]]]},{"name":"name","description":"The name of the group","type":[[["String"]]]}],"returns":{"types":[[["FrameRegistry"]]],"description":"registry"},"meta":{"line":56,"file":"registry.js","path":"src"}},{"name":"registerGroups","description":"Adds multiple groups to the registry with one command","params":[{"name":"groups","description":"The groups to add to the registry","type":[[["Array"]]]}],"returns":{"types":[[["FrameRegistry"]]],"description":"registry"},"meta":{"line":80,"file":"registry.js","path":"src"}},{"name":"registerCommand","description":"Adds a single command to the registry","params":[{"name":"command","description":"The command to add to the registry","type":[[["FrameCommand"]]]}],"returns":{"types":[[["FrameRegistry"]]],"description":"registry"},"meta":{"line":94,"file":"registry.js","path":"src"}},{"name":"registerCommands","description":"Adds multiple commands to the registry with one command","params":[{"name":"commands","description":"The command to add to the registry","type":[[["Array"]]]}],"returns":{"types":[[["FrameRegistry"]]],"description":"registry"},"meta":{"line":114,"file":"registry.js","path":"src"}},{"name":"registerCommandsInDir","description":"Adds all the commands in the folder specified to the registry","params":[{"name":"dir","description":"The folder to register commands in","type":[[["String"]]]}],"returns":{"types":[[["FrameRegistry"]]],"description":"registry"},"meta":{"line":127,"file":"registry.js","path":"src"}},{"name":"setCommandDir","description":"Sets the folder in which all the command files are","params":[{"name":"dir","description":"The folder to set as the command folder","type":[[["String"]]]}],"returns":{"types":[[["FrameRegistry"]]],"description":"registry"},"meta":{"line":144,"file":"registry.js","path":"src"}},{"name":"registerDefaults","description":"Adds all default commands and command groups to the registry","returns":{"types":[[["FrameRegistry"]]],"description":"registry"},"meta":{"line":163,"file":"registry.js","path":"src"}},{"name":"registerDefaultGroups","description":"Adds the default groups to the registry","params":[{"name":"opts","description":"The options for adding the default groups","type":[[["RegistryDefaultGroupOptions"]]]}],"returns":{"types":[[["FrameRegistry"]]],"description":"registry"},"meta":{"line":180,"file":"registry.js","path":"src"}},{"name":"registerDefaultCommands","description":"Adds the default commands to the registry","params":[{"name":"opts","description":"The options for adding the default commands","type":[[["RegistryDefaultCommandOptions"]]]}],"returns":{"types":[[["FrameRegistry"]]],"description":"registry"},"meta":{"line":204,"file":"registry.js","path":"src"}}],"meta":{"line":10,"file":"registry.js","path":"src"}},{"name":"FrameCommand","description":"Class for creating a new command","construct":{"name":"FrameCommand","description":"Creates the command instance","params":[{"name":"client","description":"The client to bind the command to","type":[[["FrameClient"]]]},{"name":"info","description":"The info about the command","type":[[["CommandInfo"]]]}]},"props":[{"name":"client","description":"The client to be used for this command","readonly":true,"type":[[["FrameClient"]]],"meta":{"line":27,"file":"command.js","path":"src/commands"}},{"name":"info","description":"The command's information","readonly":true,"type":[[["CommandInfo"]]],"meta":{"line":35,"file":"command.js","path":"src/commands"}},{"name":"name","description":"The command name","readonly":true,"type":[[["String"]]],"meta":{"line":48,"file":"command.js","path":"src/commands"}},{"name":"aliases","description":"The command aliases","readonly":true,"type":[[["Array","<"],["String",">"]]],"meta":{"line":56,"file":"command.js","path":"src/commands"}},{"name":"group","description":"The command group","readonly":true,"type":[[["String"]]],"meta":{"line":63,"file":"command.js","path":"src/commands"}},{"name":"memberName","description":"The command memberName (the name that is shown for example in the help menu)","readonly":true,"type":[[["String"]]],"meta":{"line":70,"file":"command.js","path":"src/commands"}},{"name":"description","description":"The command description","readonly":true,"type":[[["String"]]],"meta":{"line":77,"file":"command.js","path":"src/commands"}},{"name":"details","description":"The command details (detailed description displayed in the help menu)","readonly":true,"type":[[["String"]]],"meta":{"line":85,"file":"command.js","path":"src/commands"}},{"name":"examples","description":"The command examples (examples of how to use the command)","readonly":true,"type":[[["Array","<"],["String",">"]]],"meta":{"line":93,"file":"command.js","path":"src/commands"}}],"methods":[{"name":"validateInfo","description":"Validates the provided client and info to check for any errors","params":[{"name":"client","description":"The client that the command was created with","type":[[["FrameClient"]]]},{"name":"info","description":"The info to validate","type":[[["CommandInfo"]]]}],"meta":{"line":101,"file":"command.js","path":"src/commands"}},{"name":"run","description":"Runs the command","abstract":true,"params":[{"name":"message","description":"The message object which was received from discord","type":[[["Message"]]]},{"name":"args","description":"The command's arguments","type":[[["Object"]]]}],"async":true,"meta":{"line":140,"file":"command.js","path":"src/commands"}},{"name":"runSlash","description":"Runs a command from a slash command","abstract":true,"params":[{"name":"interaction","description":"The interaction that was received from discord","type":[[["Interaction"]]]},{"name":"args","description":"The command's arguments","type":[[["Object"]]]}],"async":true,"meta":{"line":150,"file":"command.js","path":"src/commands"}},{"name":"button","description":"Runs when a button is clicked","abstract":true,"params":[{"name":"interaction","description":"The button interaction received from discord","type":[[["Interaction"]]]}],"async":true,"meta":{"line":159,"file":"command.js","path":"src/commands"}}],"meta":{"line":4,"file":"command.js","path":"src/commands"}},{"name":"FrameGroup","description":"Class for storing info about a group as an object","construct":{"name":"FrameGroup","description":"Creates a new group","params":[{"name":"client","description":"The client to be used for this group","type":[[["FrameClient"]]]},{"name":"id","description":"The id of the group (must be lowercase)","type":[[["String"]]]},{"name":"name","description":"The name of the group","type":[[["String"]]]}]},"props":[{"name":"id","description":"The id of the group","readonly":true,"type":[[["String"]]],"meta":{"line":28,"file":"group.js","path":"src/commands"}},{"name":"name","description":"The name of the group","readonly":true,"type":[[["String"]]],"meta":{"line":35,"file":"group.js","path":"src/commands"}}],"meta":{"line":4,"file":"group.js","path":"src/commands"}},{"name":"SQLiteProvider","description":"Sets up a SQLite database to sotre guild settings","construct":{"name":"SQLiteProvider","params":[{"name":"db","description":"The SQLite database to use for storing settings","type":[[["SQLiteDatabase"]]]}]},"props":[{"name":"db","description":"The database to be used for storing settings","type":[[["SQLiteDatabase"]]],"meta":{"line":24,"file":"sqlite.js","path":"src/providers"}},{"name":"client","description":"The client that the provider is for (set automaticallyafter using {@link FrameClient#setProvider})","readonly":true,"type":[[["FrameClient"]]],"meta":{"line":26,"file":"sqlite.js","path":"src/providers"}},{"name":"settings","description":"Guild and global settings, cached for faster loading","access":"private","type":[[["Map"]]],"meta":{"line":39,"file":"sqlite.js","path":"src/providers"}},{"name":"insertOrReplaceStmt","description":"Prepared statement to insert or replace a settings row","access":"private","type":[[["SQLiteStatement"]]],"meta":{"line":46,"file":"sqlite.js","path":"src/providers"}},{"name":"deleteStmt","description":"Prepared statement to delete an entire settings row","access":"private","type":[[["SQLiteStatement"]]],"meta":{"line":53,"file":"sqlite.js","path":"src/providers"}}],"methods":[{"name":"init","description":"Initialises and prepares the database","params":[{"name":"client","description":"The client to use for the provider","type":[[["FrameClient"]]]}],"async":true,"meta":{"line":60,"file":"sqlite.js","path":"src/providers"}},{"name":"destroy","description":"Finishes up all current operations with the database and closes the connection","async":true,"meta":{"line":87,"file":"sqlite.js","path":"src/providers"}},{"name":"get","description":"Gets a guild's or global setting from cached memory","params":[{"name":"guild","description":"The guild to get the settings for (or 'global')","type":[["*"]]},{"name":"key","description":"The key to the setting","type":[[["String"]]]},{"name":"defVal","description":"The default value to return if nothing is found","type":[["*"]]}],"returns":{"types":[["*"]],"description":"- The value of the setting"},"meta":{"line":101,"file":"sqlite.js","path":"src/providers"}},{"name":"set","description":"Sets or changes a setting of a guild or global","params":[{"name":"guild","description":"The guild to set the settings for (or 'global')","type":[["*"]]},{"name":"key","description":"The key to the setting","type":[[["String"]]]},{"name":"val","description":"The value to set","type":[["*"]]}],"async":true,"returns":{"types":[["*"]],"description":"- The value of the setting after changing"},"meta":{"line":113,"file":"sqlite.js","path":"src/providers"}},{"name":"remove","description":"Completely removes a setting from cache and database","params":[{"name":"guild","description":"The guild to delete the setting from","type":[["*"]]},{"name":"key","description":"The key to the setting","type":[[["String"]]]}],"async":true,"returns":{"types":[["*"]],"description":"- The value of the setting before it was deleted"},"meta":{"line":133,"file":"sqlite.js","path":"src/providers"}},{"name":"clear","description":"Clears all the setting for a guild","params":[{"name":"guild","description":"The guild to delete all data from","type":[["*"]]}],"async":true,"meta":{"line":149,"file":"sqlite.js","path":"src/providers"}},{"name":"updateOtherShards","description":"Changes a global setting on all shards","params":[{"name":"key","description":"The key to the setting","type":[["*"]]},{"name":"val","description":"The value to set","type":[["*"]]}],"meta":{"line":161,"file":"sqlite.js","path":"src/providers"}},{"name":"getGuildID","description":"Gets the ID of a guild","scope":"static","params":[{"name":"guild","description":"The guild to get the ID of","type":[[["String"]],[["Guild"]]]}],"returns":{"types":[[["String"]]],"description":"- The ID of the guild"},"meta":{"line":184,"file":"sqlite.js","path":"src/providers"}}],"meta":{"line":14,"file":"sqlite.js","path":"src/providers"}}],"interfaces":[],"typedefs":[{"name":"FrameClientOptions","description":"Options for the new FrameClient","type":[[["Object"]]],"props":[{"name":"commandPrefix","description":"Default prefix for the commands","optional":true,"default":"!","type":[[["string"]]]}],"meta":{"line":11,"file":"client.js","path":"src"}},{"name":"RegistryDefaultGroupOptions","description":"The options for registering the default groups in the registry","type":[[["Object"]]],"props":[{"name":"util","description":"Whether to register the Utility group","optional":true,"default":true,"type":[[["Boolean"]]]}],"meta":{"line":169,"file":"registry.js","path":"src"}},{"name":"RegistryDefaultCommandOptions","description":"The options for registering the default commands in the registry","type":[[["Object"]]],"props":[{"name":"help","description":"Whether to register the Help command","optional":true,"default":true,"type":[[["Boolean"]]]}],"meta":{"line":193,"file":"registry.js","path":"src"}},{"name":"CommandInfo","description":"The information about the command","type":[[["Object"]]],"props":[{"name":"name","description":"The name of the command (only lower-case)","type":[[["String"]]]},{"name":"aliases","description":"The aliases for the command","optional":true,"default":"[]","type":[[["Array","<"],["String",">"]]]},{"name":"group","description":"The group for the command","type":[[["String"]]]},{"name":"memberName","description":"The display name of the command (can include special characters)","type":[[["String"]]]},{"name":"description","description":"The description of the command","type":[[["String"]]]},{"name":"details","description":"A detailed description of the command","optional":true,"default":"\"\"","type":[[["String"]]]},{"name":"examples","description":"A list of examples for the command","optional":true,"default":"[]","type":[[["Array","<"],["String",">"]]]},{"name":"clientPermissions","description":"A list of permissions that the client has to have","optional":true,"default":"[]","type":[[["Array","<"],["String",">"]]]},{"name":"userPermissions","description":"A list of permissions that the user has to have","optional":true,"default":"[]","type":[[["Array","<"],["String",">"]]]}],"meta":{"line":5,"file":"command.js","path":"src/commands"}}],"externals":[{"name":"SQLiteStatement","see":["{@link https://www.npmjs.com/package/sqlite}"],"meta":{"line":1,"file":"sqlite.js","path":"src/providers"}},{"name":"SQLiteDatabase","see":["{@link https://www.npmjs.com/package/sqlite}"],"meta":{"line":6,"file":"sqlite.js","path":"src/providers"}}]}